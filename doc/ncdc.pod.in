
=head1 NAME

ncdc - Ncurses Direct Connect Client

=head1 SYNOPSIS

ncdc [options]

=head1 DESCRIPTION

Ncdc is a modern and lightweight direct connect client with a friendly ncurses
interface.

=head1 GETTING STARTED

This is a basic introduction for those who are new to ncdc. See the chapters
below for a more detailed description of the available functionality.

What you see when starting up ncdc is an input line where you can input
commands and a log window where the results are displayed, much like a regular
terminal. Commands within ncdc start with a slash (e.g. C</help>) and have tab
completion to help you.

The first thing you will want to do after starting ncdc for the first time is
to setup some basic information and settings:

  /set nick MyNick
  /set description ncdc is awesome!
  /set connection 10
  /share "My Awesome Files" /path/to/files

And if you have a direct connection to the internet or if your router allows
port forwarding, you may also want to enable active mode:

  /set active_port 34194
  /set active true

See the help text for each of the commands and settings for more information.
Of course, all of the above settings are saved to the database and will be used
again on the next run.

To connect to a hub, use /open:

  /open ncdc adc://dc.blicky.net:2780/

Here I<ncdc> is the personal name you give to the hub, and the second argument
the URL. This URL will be saved in the database, so the next time you want to
connect to this hub, you can simply do C</open ncdc>. See the help text for
C</open> and C</connect> for more information. If you want to automatically
connect to a hub when ncdc starts up, use the C<autoconnect> setting.

Ncdc uses a tabbed interface: every hub opens in a new tab, and there are
several other kinds of tabs available as well. The type of tab is indicated in
the tab list on the bottom of the screen with a character prefix. Hubs, for
example, are prefixed with a C<#>. If a tab needs your attention, a colored
exclamation mark is displayed before the tab name, different colors are used
for different types of activity.

Everything else should be fairly self-explanatory: To search for files, use the
C</search> command. To browse through the user list of a hub, use C</userlist> or
hit Alt+u. To browse someone's file list, use C</browse> or hit the 'b' key in
the user list. And to monitor your upload and download connections, use
C</connections> or hit Alt+n.


=head1 OPTIONS

=over

=item B<-c, --session-dir=> I<dir>

Use a different session directory. Defaults to the contents of the environment
variable `$NCDC_DIR' or if this is unset to `$HOME/.ncdc'.

=item B<-h, --help>

Display summary of options.

=item B<-n, --no-autoconnect>

Don't automatically connect to hubs with the C<autoconnect> option set.

=item B<--no-bracketed-paste>

Disable bracketed pasting.

=item B<-v, --version>

Display ncdc version.

=back


=head1 GETTING CONNECTED

As with most file sharing clients, ncdc supports two modes of being connected:
I<active> and I<passive>. In passive mode (the default), you can connect to the
outside world but nobody can connect (directly) to you. When passive, you will
only be able to transfer files with people who are in active mode. In active
mode, however, you will have some port open to the rest of the network to which
other clients can connect. When active, you will be able to transfer files with
everyone and you may get more and faster search results. Configuring active
mode is therefore recommended.

In many setups, all you need to do to switch to active mode is to set a TCP/UDP
port and enable the C<active> setting:

  /set active_port 34194
  /set active true

When you connect to a hub, the status bar will tell you whether you are active
or passive on that particular hub, and what IP address is being used to allow
others to connect to you. For most hubs, your IP address will be detected
automatically, but in the event that this fails, you can also set it yourself:

  /set active_ip 13.33.33.7

If you are behind a NAT or firewall, you have to ensure that the port you
configured is somehow allowed and/or forwarded. The C<active_port> setting is
used for incoming TCP connections and UDP messages. You can configure a
different UDP port with the C<active_udp_port> setting. Contrary to many toher
Direct Connect clients, ncdc only uses a single port for incoming TCP and TLS
connections; There is no separate port for TLS.

The C</listen> command can tell you which ports it expects to be forwarded, and
for which hubs these ports will be used. It only lists hubs on which you are
currently active, so the output will change when you open or close a hub
connection.

If you have multiple network interfaces, you can force ncdc to use only a
single interface by setting the C<local_address> setting to the address of that
interface. This affects both outgoing connections (they will be forced to go
through the configured interface) and incoming connections (the ports will be
bound to the configured interface).

All of the previously mentioned settings can be set globally (with C</set>) and
on a per-hub basis (with C</hset>). This allows you to be active on an internet
hub and a LAN-only hub at the same time. It also allows you to be active in one
hub while passive in another, or to use different ports for each hub.


=head1 INTERACTIVE COMMANDS

The following is the list of commands that can be used within ncdc. The /help
command can also be used get a list of available commands and to access this
documentation.

@commands@


=head1 SETTINGS

The following is a list of configuration settings. These settings can be
changed and queried using the C</set> command for global settings and C</hset>
for hub-local settings. All configuration data is stored in the db.sqlite3 file
in the session directory.

@settings@


=head1 KEY BINDINGS

On any tab without the text input line, you can press `?' to get the key
bindings for that tab. The list of key bindings is available through the
C</help keys> command, and is reproduced below.

@keys@


=head1 WEIRD UI FLAGS

Some listings have a flags display, and their meaning may not be immediately obvious.

=head2 File status

You may see one-letter flags to the left of file names in search results and
file list tabs. Their meaning is as follows:

=over

=item H

The file had been added to the file list, but has not been hashed yet and thus
is not visible to others. This flag can appear only when browsing your own list.

=item S

The file is already in your share. If C<download_shared> is set to C<false>,
trying to download it will result only in an informational message. This flag
never appears when browsing your own file list.

=item Q

The file is currently in your download queue. Trying to download it will result
only in an informational message.

=back

=head2 Connection flags

On the connection list window, there are two flags:

=over

=item S

Connection state, can be either B<C>onnecting, B<H>andshake, B<I>dle,
B<D>ownloading, B<U>ploading or B<-> for disconnected.

=item t

This means that the connection is encrypted with TLS.

=back

=head2 User flags

The user list has some flags too:

=over

=item o

Set if the user is an operator in the hub.

=item p

When the user is passive. If this flag is not set, the user is active.

=item t

Set if connections with this user will be encrypted with TLS.

=back


=head1 ENVIRONMENT

$NCDC_DIR is used to determine the session dir, it is only honoured if I<-c> is
not set on the command line.


=head1 FILES

$NCDC_DIR corresponds to the session dir set via I<-c>, environment variable
$NCDC_DIR or $HOME/.ncdc.

=over

=item $NCDC_DIR/cert/

Directory where the client certificates are stored. Must contain a private key
file (client.key) and public certificate (client.crt). These will be generated
automatically when ncdc starts up the first time.

=item $NCDC_DIR/db.sqlite3

The database. This stores all configuration variables, hash data of shared
files, download queue information and other state information. Manually editing
this file with the `sqlite3' commandline tool is possible but discouraged. Any
changes made to the database while ncdc is running will not be read, and may
even get overwritten by ncdc.

=item $NCDC_DIR/dl/

Directory where completed downloads are moved to by default. Can be changed
with the C<download_dir> configuration option.

=item $NCDC_DIR/files.xml.bz2

Filelist containing a listing of all shared files.

=item $NCDC_DIR/fl/

Directory where downloaded file lists from other users are stored. The names of
the files are hex-encoded user IDs that are used internally by ncdc. Old file
lists are deleted automatically after a configurable interval. See the
C<filelist_maxage> configuration option.


=item $NCDC_DIR/history

Command history.

=item $NCDC_DIR/inc/

Default location for incomplete downloads. Can be changed with the
C<incoming_dir> setting. The file names in this directory are the
base32-encoded TTH root of the completed file.

=item $NCDC_DIR/logs/

Directory where all the log files are stored. File names starting with `#' are
hub logs and `~' are user (PM) logs. Special log files are transfers.log and
main.log.

ncdc does not have built-in functionality to rotate or compress log files
automatically. When rotating log files manually (e.g. via a cron job), make
sure to send the SIGUSR1 signal afterwards to force ncdc to flush the old logs
and create or open the new log files.

=item $NCDC_DIR/stderr.log

Error/debug log. This file is cleared every time ncdc starts up.

=item $NCDC_DIR/version

Version of the data directory. This file locked while an ncdc instance is
running, making sure that no two ncdc instances work with the same session
directory at the same time.

=back

=head2 Format of transfers.log

Uploads and downloads are logged in the transfers.log file. Transfers are
separated by a newline (C<0x0a>). Each log line has the following fields,
separated by a space:

=over

=item 1.

Date/time when the transfer ended, formatted as C<[YYYY-MM-DD HH:MM:SS ZONE]>,

=item 2.

Hub name, including the C<#> prefix,

=item 3.

Base32-encoded CID of the other user for ADC transfers, or a '-' for NMDC,

=item 4.

User name (escaped),

=item 5.

IPv4 or IPv6 address,

=item 6.

Direction, C<u> for upload or C<d> for download,

=item 7.

Whether the transfer completed successfully (C<c>) or has been
interrupted/disconnected before all requested file data has been transferred
(C<i>),

=item 8.

Base32-encoded TTH of the transferred file, or '-' for C<files.xml.bz2>,

=item 9.

Total transfer time, in seconds,

=item 10.

File size, in bytes,

=item 11.

File offset, in bytes,

=item 12.

Transfer size, in bytes,

=item 13.

File path (escaped). Absolute virtual path for uploads, destination path for
downloads.

=back

All fields are encoded in UTF-8. Fields that may contain a space or newline are
escaped as follows: A space is escaped as C<\s>, a newline as C<\n> and a
backslash as C<\\>. The timestamp is not escaped.

Many clients download files is separate (smallish) chunks. Ncdc makes no
attempt to combine multiple chunk requests in a single log entry, so you may
see the same uploaded file several times with a different file offset.


=head1 LICENSE

Copyright (C) 2011-2013 Yoran Heling <projects@yorhel.nl>

ncdc is distributed under the MIT license, please read the COPYING file for
more information.

=head1 BUGS

Please report bugs or feature requests to the bug tracker or the mailing list.
Both can be found on the ncdc homepage at L<https://dev.yorhel.nl/ncdc>. There
is also an ADC hub available at C<adc://dc.blicky.net:2780/> for general
support and discussions.

=head1 AUTHOR

ncdc is written by Yoran Heling <projects@yorhel.nl>

Web: L<https://dev.yorhel.nl/ncdc>
